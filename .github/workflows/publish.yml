name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine tomli
        
    - name: Verify version matches release
      run: |
        # Get version from pyproject.toml
        VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['tool']['poetry']['version'])")
        # Get release tag version (strip the 'v' prefix)
        RELEASE_VERSION=${GITHUB_REF#refs/tags/v}
        
        echo "pyproject.toml version: $VERSION"
        echo "Release version: $RELEASE_VERSION"
        
        if [ "$VERSION" != "$RELEASE_VERSION" ]; then
          echo "Error: Version mismatch between pyproject.toml ($VERSION) and release tag ($RELEASE_VERSION)"
          exit 1
        fi
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Build package
      run: poetry build
      
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: poetry publish 